{"version":3,"sources":["assets/images/doctors.svg","assets/images/logo.svg","assets/images/logo-alt.svg","assets/images/logo-transparent.svg","assets/images/logo-alt-transparent.svg","services/api.ts","hooks/auth.tsx","routes/Route.tsx","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/styles.ts","components/ToastContainer/index.tsx","hooks/toast.tsx","utils/getValidationErrors.ts","components/ToolTip/styles.ts","components/ToolTip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","components/GoogleRecaptcha/styles.ts","components/GoogleRecaptcha/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","components/Select/styles.ts","components/Select/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/ForgotPassword/styles.ts","pages/ForgotPassword/index.tsx","pages/ResetPassword/styles.ts","pages/ResetPassword/index.tsx","components/ThemeSwitchButton/styles.ts","components/ThemeSwitchButton/index.tsx","styles/global.ts","styles/themes/dark.ts","styles/themes/light.ts","hooks/theme.tsx","components/Logo/styles.ts","components/Logo/index.tsx","pages/Dashboard/styles.ts","components/Card/styles.ts","components/Card/index.tsx","pages/Dashboard/index.tsx","pages/Profile/styles.ts","pages/Profile/index.tsx","services/apiMaps.ts","pages/HospitalsNearby/styles.ts","pages/HospitalsNearby/index.tsx","pages/MedicalRecords/styles.ts","pages/MedicalRecords/index.tsx","components/CheckBox/styles.ts","components/CheckBox/index.tsx","components/MultilineInput/styles.ts","components/MultilineInput/index.tsx","pages/NewMedicalRecord/styles.ts","pages/NewMedicalRecord/index.tsx","routes/index.tsx","hooks/index.tsx","App.tsx","index.tsx","assets/images/medicine.svg"],"names":["module","exports","api","axios","create","baseURL","process","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","updateUser","Provider","value","useAuth","context","useContext","Error","Route","isPrivate","Component","component","rest","render","to","pathname","toastTypeVariations","info","css","success","error","Container","styled","animated","div","props","type","hasDescription","icons","size","Toast","message","style","removeToast","useToast","useEffect","timer","setTimeout","id","clearTimeout","Number","description","title","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","state","filter","getValidationErrors","err","validationErrors","inner","forEach","path","Tooltip","className","theme","backgroundAuxiliar","font","isFocused","colors","green","isFilled","isErrored","red","lighten","Input","name","Icon","icon","containerStyle","placeholder","inputRef","useRef","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","handleInputFocus","handleInputBlur","current","ref","onFocus","onBlur","color","button","secondary","shade","Button","loading","GoogleRecaptcha","hl","sitekey","readableColor","lightTransparentLogo","darkTransparentLogo","Content","appearFromLeft","keyframes","AnimationContainer","Background","SignIn","formRef","isRecaptcha","setIsRecaptcha","history","useHistory","handleVerifyCallback","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","push","errors","onSubmit","FiMail","FiLock","onChange","disabled","src","medicineImg","alt","black","Select","options","selectRef","option","index","label","appearFromRight","SignUp","birthday","min","sex","oneOf","cellphone","passwordConfirmation","undefined","replace","isAdmin","console","log","doctorsImg","FiUser","FiCalendar","FiPhone","ForgotPassword","setLoading","ResetPassword","location","useLocation","search","alternativeBackground","fontAuxiliar","ThemeSwitchButton","useTheme","changeTheme","isDarkMode","GlobalStyle","createGlobalStyle","background","darkTheme","primary","white","darkGray","yellow","blue","purple","lightTheme","ThemeContext","ThemeProvider","darkMode","setIsDarkMode","LogoImage","img","Logo","darkLogoImg","lightLogoImg","Header","header","HeaderContent","Profile","main","Link","Card","route","Dashboard","avatarUrl","FiMapPin","FiClipboard","FiPlusCircle","AvatarInput","birthdayDate","telephone","formData","put","handleAvatarChange","event","target","files","FormData","append","patch","initialData","htmlFor","apiMaps","headers","AddressContainer","span","HospitalsNearby","isBrowserAuthorized","setIsBrowserAuthorized","lat","lng","currentPosition","setCurrentPosition","isLoading","setIsLoading","setMap","geolocationResults","setGeolocationResults","hospitalLocations","setHospitalLocations","authorizedGeolocation","coords","latitude","longitude","get","params","radius","types","results","locations","result","geometry","unAuthorizedGeolocation","navigator","geolocation","getCurrentPosition","enableHighAccuracy","onLoad","googleMap","onUmount","mapContainerStyle","width","height","center","zoom","onUnmount","length","position","rel","href","MedicalRecords","downloadLinkRef","fetchMedicalRecords","Authorization","fetchMedicalRecordsFile","file","Blob","URL","createObjectURL","download","Date","now","onclick","click","medicalRecords","medicalRecord","hospital","referral","weight","allergy","createdAt","CheckBox","defaultChecked","MultilineInput","handleMultilineInputFocus","handleMultilineInputBlur","NewMedicalRecord","hospitals","setHospitals","handleHospitals","oldValue","handleFormValues","bodyTemperature","call","crypto","randomBytes","toString","matches","bloodPressure","lastCycle","isPregnant","hospitalId","FaWeight","GiBodyHeight","GiWaterDrop","FaTemperatureHigh","FaAllergies","GiCycle","FaHospitalAlt","nome","Routes","exact","AppProvider","googleMapsApiKey","libraries","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ce7a235.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doctors.367a4d8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.6a296b41.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-alt.b5a91c95.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-transparent.08274b7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-alt-transparent.0f307e9d.svg\";","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\r\n})\r\n\r\nexport default api\r\n","import React, { createContext, useCallback, useState, useContext } from 'react'\r\n\r\nimport api from '../services/api'\r\n\r\ninterface MedicalRecordAddress {\r\n  id: number\r\n  cep: string\r\n  address: string\r\n  district: string\r\n  number: string\r\n  city: string\r\n  state: string\r\n}\r\n\r\ninterface MedicalRecord {\r\n  hospital?: {\r\n    id: number\r\n    name: string\r\n    cnpj: string\r\n    telehpone: string\r\n    email: string\r\n    address: MedicalRecordAddress\r\n  }\r\n  referral: {\r\n    id: string\r\n    color: string\r\n    call: string\r\n  }\r\n  weight: number\r\n  height: number\r\n  bloodPressure: number\r\n  bodyTemperature: number\r\n  allergy: string\r\n  lastCycle: string\r\n  isPregnant: boolean\r\n  createdAt: string\r\n}\r\n\r\nexport interface IUser {\r\n  id: number\r\n  medicalRecords: MedicalRecord[]\r\n  name: string\r\n  cellphone: string\r\n  birthday: string\r\n  sex: string\r\n  email: string\r\n  /** @deprecated */\r\n  avatarUrl?: string\r\n}\r\n\r\ninterface IAuthState {\r\n  token: string\r\n  user: IUser\r\n}\r\n\r\ninterface IAuthStateResponse extends IAuthState {\r\n  user: IUser & { password: string }\r\n}\r\n\r\ninterface ISignInCredentials {\r\n  email: string\r\n  password: string\r\n}\r\n\r\ninterface IAuthContextData {\r\n  user: IUser\r\n  token: string\r\n  signIn(credentials: ISignInCredentials): Promise<void>\r\n  signOut(): void\r\n  updateUser(user: IUser): void\r\n}\r\n\r\nconst AuthContext = createContext<IAuthContextData>({} as IAuthContextData)\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [data, setData] = useState<IAuthState>(() => {\r\n    const token = localStorage.getItem('@SallutApp:token')\r\n    const user = localStorage.getItem('@SallutApp:user')\r\n\r\n    if (token && user) {\r\n      return { token, user: JSON.parse(user) }\r\n    }\r\n\r\n    return {} as IAuthState\r\n  })\r\n\r\n  const signIn = useCallback(async ({ email, password }) => {\r\n    const response = await api.post<IAuthStateResponse>('auth', {\r\n      email,\r\n      password,\r\n    })\r\n\r\n    const { token, user } = response.data\r\n\r\n    delete user.password\r\n\r\n    localStorage.setItem('@SallutApp:token', token)\r\n    localStorage.setItem('@SallutApp:user', JSON.stringify(user))\r\n\r\n    setData({ token, user })\r\n  }, [])\r\n\r\n  const signOut = useCallback(() => {\r\n    localStorage.removeItem('@SallutApp:token')\r\n    localStorage.removeItem('@SallutApp:user')\r\n\r\n    setData({} as IAuthState)\r\n  }, [])\r\n\r\n  const updateUser = useCallback(\r\n    (user: IUser) => {\r\n      localStorage.setItem('@SallutApp:user', JSON.stringify(user))\r\n\r\n      setData({\r\n        token: data.token,\r\n        user,\r\n      })\r\n    },\r\n    [setData, data.token],\r\n  )\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: data.user,\r\n        token: data.token,\r\n        signIn,\r\n        signOut,\r\n        updateUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useAuth(): IAuthContextData {\r\n  const context = useContext(AuthContext)\r\n\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Route as ReactDOMRoute,\r\n  RouteProps as ReactDOMRouteProps,\r\n  Redirect,\r\n} from 'react-router-dom'\r\n\r\nimport { useAuth } from '../hooks/auth'\r\n\r\ninterface ReactProps extends ReactDOMRouteProps {\r\n  isPrivate?: boolean\r\n  component: React.ComponentType\r\n}\r\n\r\n// isPrivate + isAuthenticated\r\n// true + true = OK\r\n// true + false = Redirecionar para login\r\n// false + true = Redirecionar para dashboard\r\n// false + false = OK\r\n\r\nconst Route: React.FC<ReactProps> = ({\r\n  isPrivate = false,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  const { user } = useAuth()\r\n\r\n  return (\r\n    <ReactDOMRoute\r\n      {...rest}\r\n      render={() => {\r\n        return isPrivate === !!user ? (\r\n          <Component />\r\n        ) : (\r\n          <Redirect to={{ pathname: isPrivate ? '/' : '/dashboard' }} />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Route\r\n","import styled, { css } from 'styled-components'\r\nimport { animated } from 'react-spring'\r\n\r\ninterface IContainerProps {\r\n  type?: 'info' | 'success' | 'error'\r\n  hasDescription: number\r\n}\r\n\r\nconst toastTypeVariations = {\r\n  info: css`\r\n    background: #ebf8ff;\r\n    color: #3172b7;\r\n  `,\r\n  success: css`\r\n    background: #e6fffa;\r\n    color: #2e656a;\r\n  `,\r\n  error: css`\r\n    background: #fddede;\r\n    color: #c53030;\r\n  `,\r\n}\r\n\r\nexport const Container = styled(animated.div)<IContainerProps>`\r\n  width: 360px;\r\n\r\n  position: relative;\r\n  padding: 16px 30px 16px 16px;\r\n  border-radius: 10px;\r\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\r\n\r\n  display: flex;\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  > svg {\r\n    margin: 4px 12px 0 0;\r\n  }\r\n\r\n  ${props => toastTypeVariations[props.type || 'info']}\r\n\r\n  div {\r\n    flex: 1;\r\n\r\n    p {\r\n      margin-top: 4px;\r\n      font-size: 14px;\r\n      opacity: 0.8;\r\n      line-height: 20px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 19px;\r\n    opacity: 0.6;\r\n    border: 0ch;\r\n    background: transparent;\r\n    color: inherit;\r\n  }\r\n\r\n  ${props =>\r\n    !props.hasDescription &&\r\n    css`\r\n      align-items: center;\r\n\r\n      svg {\r\n        margin-top: 0;\r\n      }\r\n    `}\r\n`\r\n","import React, { useEffect } from 'react'\r\nimport { FiAlertCircle, FiCheckCircle, FiInfo, FiXCircle } from 'react-icons/fi'\r\n\r\nimport { IToastMessage, useToast } from '../../../hooks/toast'\r\n\r\nimport { Container } from './styles'\r\n\r\ninterface IToastProps {\r\n  message: IToastMessage\r\n  style: React.CSSProperties\r\n}\r\n\r\nconst icons = {\r\n  info: <FiInfo size={24} />,\r\n  error: <FiAlertCircle size={24} />,\r\n  success: <FiCheckCircle size={24} />,\r\n}\r\n\r\nconst Toast: React.FC<IToastProps> = ({ message, style }) => {\r\n  const { removeToast } = useToast()\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      removeToast(message.id)\r\n    }, 3000)\r\n\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [removeToast, message.id])\r\n\r\n  return (\r\n    <Container\r\n      type={message.type}\r\n      hasDescription={Number(!!message.description)}\r\n      style={style}\r\n    >\r\n      {icons[message.type || 'info']}\r\n\r\n      <div>\r\n        <strong>{message.title}</strong>\r\n        {message.description && <p>{message.description}</p>}\r\n      </div>\r\n\r\n      <button onClick={() => removeToast(message.id)} type=\"button\">\r\n        <FiXCircle size={18} />\r\n      </button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Toast\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 30px;\r\n  overflow: hidden;\r\n`\r\n","import React from 'react'\r\nimport { useTransition } from 'react-spring'\r\n\r\nimport Toast from './Toast'\r\n\r\nimport { IToastMessage } from '../../hooks/toast'\r\n\r\nimport { Container } from './styles'\r\n\r\ninterface IToastContainerProps {\r\n  messages: IToastMessage[]\r\n}\r\n\r\nconst ToastContainer: React.FC<IToastContainerProps> = ({ messages }) => {\r\n  const messagesWithTransitions = useTransition(\r\n    messages,\r\n    (message) => message.id,\r\n    {\r\n      from: { right: '-120%', opacity: 0 },\r\n      enter: { right: '0%', opacity: 1 },\r\n      leave: { right: '-120%', opacity: 0 },\r\n    },\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      {messagesWithTransitions.map(({ item, key, props }) => (\r\n        <Toast key={key} style={props} message={item} />\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToastContainer\r\n","import React, { createContext, useContext, useCallback, useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport ToastContainer from '../components/ToastContainer'\r\n\r\nexport interface IToastMessage {\r\n  id: string\r\n  type?: 'success' | 'error' | 'info'\r\n  title: string\r\n  description?: string\r\n}\r\n\r\ninterface IAddToastCallback {\r\n  (toast: Omit<IToastMessage, 'id'>): void\r\n}\r\n\r\ninterface IRemoveToastCallback {\r\n  (id: string): void\r\n}\r\n\r\ninterface IToastContextData {\r\n  addToast: IAddToastCallback\r\n  removeToast: IRemoveToastCallback\r\n}\r\n\r\nconst ToastContext = createContext<IToastContextData>({} as IToastContextData)\r\n\r\nexport const ToastProvider: React.FC = ({ children }) => {\r\n  const [messages, setMessages] = useState<IToastMessage[]>([])\r\n\r\n  const addToast = useCallback<IAddToastCallback>(\r\n    ({ title, description, type }) => {\r\n      const id = uuid()\r\n\r\n      const toast = {\r\n        id,\r\n        type,\r\n        title,\r\n        description,\r\n      }\r\n\r\n      setMessages(state => [...state, toast])\r\n    },\r\n    [],\r\n  )\r\n\r\n  const removeToast = useCallback<IRemoveToastCallback>(id => {\r\n    setMessages(state => state.filter(message => message.id !== id))\r\n  }, [])\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast, removeToast }}>\r\n      {children}\r\n      <ToastContainer messages={messages} />\r\n    </ToastContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useToast(): IToastContextData {\r\n  const context = useContext(ToastContext)\r\n\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an ToastProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n","import { ValidationError } from 'yup'\r\n\r\ninterface IErrors {\r\n  [key: string]: string\r\n}\r\n\r\nfunction getValidationErrors(err: ValidationError): IErrors {\r\n  const validationErrors: IErrors = {}\r\n\r\n  err.inner.forEach(error => {\r\n    validationErrors[error.path] = error.message\r\n  })\r\n\r\n  return validationErrors\r\n}\r\n\r\nexport default getValidationErrors\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n\r\n  span {\r\n    width: 160px;\r\n    background: #32b38f;\r\n    padding: 8px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    opacity: 0;\r\n    transition: opacity 0.4s;\r\n    visibility: hidden;\r\n\r\n    position: absolute;\r\n    bottom: calc(100% + 12px);\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n\r\n    color: #333;\r\n\r\n    &::before {\r\n      content: '';\r\n      border-style: solid;\r\n      border-color: #32b38f transparent;\r\n      border-width: 6px 6px 0 6px;\r\n      bottom: 20px;\r\n      top: 100%;\r\n      position: absolute;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n  }\r\n\r\n  &:hover span {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`\r\n","import React from 'react'\r\n\r\nimport { Container } from './styles'\r\n\r\ninterface ITooltipProps {\r\n  title: string\r\n  className?: string\r\n}\r\n\r\nconst Tooltip: React.FC<ITooltipProps> = ({ title, className, children }) => {\r\n  return (\r\n    <Container className={className}>\r\n      {children}\r\n      <span>{title}</span>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import styled, { css } from 'styled-components'\r\nimport { lighten } from 'polished'\r\n\r\nimport Tooltip from '../ToolTip'\r\n\r\ninterface IContainerProps {\r\n  isFocused: boolean\r\n  isFilled: boolean\r\n  isErrored: boolean\r\n}\r\n\r\nexport const Container = styled.div<IContainerProps>`\r\n  padding: 16px;\r\n  width: 100%;\r\n  max-width: 340px;\r\n\r\n  background: ${props => props.theme.backgroundAuxiliar};\r\n  border-radius: 10px;\r\n  border: 2px solid ${props => props.theme.backgroundAuxiliar};\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  color: ${props => props.theme.font};\r\n\r\n  & + div, & + label {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props =>\r\n    props.isFocused &&\r\n    css`\r\n      color: ${props => props.theme.colors.green};\r\n      border-color: ${props => props.theme.colors.green};\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFilled &&\r\n    css`\r\n      color: ${props => props.theme.colors.green};\r\n    `}\r\n  \r\n  ${props =>\r\n    props.isErrored &&\r\n    css`\r\n      border-color: ${props => props.theme.colors.red};\r\n    `}\r\n\r\n  input {\r\n    flex: 1;\r\n    background: transparent;\r\n    border: 0;\r\n\r\n    color: ${props => props.theme.font};\r\n\r\n    &::placeholder {\r\n      color: ${props => lighten(0.2, props.theme.font)};\r\n    }\r\n  }\r\n\r\n  svg {\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nexport const Error = styled(Tooltip)`\r\n  height: 20px;\r\n  margin-left: 16px;\r\n\r\n  svg {\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    background: ${props => props.theme.colors.red};\r\n    color: ${props => props.theme.font};\r\n\r\n    &::before {\r\n      border-color: ${props => props.theme.colors.red} transparent;\r\n    }\r\n  }\r\n`\r\n","import React, {\r\n  InputHTMLAttributes,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n} from 'react'\r\nimport { IconBaseProps } from 'react-icons'\r\nimport { FiAlertCircle } from 'react-icons/fi'\r\nimport { useField } from '@unform/core'\r\n\r\nimport { Container, Error } from './styles'\r\n\r\ninterface IInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string\r\n  containerStyle?: React.CSSProperties\r\n  icon?: React.ComponentType<IconBaseProps>\r\n  placeholder: string\r\n}\r\n\r\nconst Input: React.FC<IInputProps> = ({\r\n  name,\r\n  icon: Icon,\r\n  containerStyle = {},\r\n  placeholder,\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n  const [isFocused, setIsFocused] = useState(false)\r\n  const [isFilled, setIsFilled] = useState(false)\r\n\r\n  const { fieldName, defaultValue, error, registerField } = useField(name)\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true)\r\n  }, [])\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false)\r\n\r\n    setIsFilled(!!inputRef.current?.value)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    })\r\n  }, [fieldName, registerField])\r\n\r\n  return (\r\n    <Container\r\n      style={containerStyle}\r\n      isErrored={!!error}\r\n      isFilled={isFilled}\r\n      isFocused={isFocused}\r\n    >\r\n      {Icon && <Icon size={20} title={placeholder} />}\r\n      <input\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        defaultValue={defaultValue}\r\n        placeholder={placeholder}\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"#ff5050\" title={error} size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import styled from 'styled-components'\r\nimport { shade } from 'polished'\r\n\r\nexport const Container = styled.button`\r\n  margin-top: 16px;\r\n  padding: 0 16px;\r\n  width: 100%;\r\n  height: 56px;\r\n\r\n  background: ${props => props.theme.secondary};\r\n  border-radius: 10px;\r\n  border: 0;\r\n\r\n  color: #333;\r\n\r\n  font-weight: 500;\r\n  transition: background-color 0.2s;\r\n\r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n\r\n    &:hover {\r\n      background: ${props => props.theme.secondary};\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: ${props => shade(0.2, props.theme.secondary)};\r\n  }\r\n`\r\n","import React, { ButtonHTMLAttributes } from 'react'\r\n\r\nimport { Container } from './styles'\r\n\r\ninterface IButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  loading?: boolean\r\n}\r\n\r\nconst Button: React.FC<IButtonProps> = ({ children, loading, ...rest }) => (\r\n  <Container type=\"button\" {...rest}>\r\n    {loading ? 'Carregando...' : children}\r\n  </Container>\r\n)\r\n\r\nexport default Button\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 8px;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n","import React from 'react'\r\nimport ReCAPTCHA, { ReCAPTCHAProps } from 'react-google-recaptcha'\r\n\r\nimport { Container } from './styles'\r\n\r\ntype GoogleRecaptchaProps = Omit<ReCAPTCHAProps, 'sitekey' | 'hl'>\r\n\r\nconst GoogleRecaptcha: React.FC<GoogleRecaptchaProps> = ({ ...rest }) => {\r\n  return (\r\n    <Container>\r\n      <ReCAPTCHA\r\n        hl={'pt-BR'}\r\n        sitekey={process.env.REACT_APP_RECAPTCHA_SITEKEY as string}\r\n        {...rest}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GoogleRecaptcha\r\n","import styled, { keyframes } from 'styled-components'\r\nimport { shade, readableColor } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  padding: 32px;\r\n  height: 100vh;\r\n\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 70% 15%`\r\n      : `url(${darkTransparentLogo}) no-repeat 70% 15%`\r\n  }};\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`\r\n\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst appearFromLeft = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-50px);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${appearFromLeft} 1s;\r\n\r\n  form {\r\n    margin: 40px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h3 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: ${props => props.theme.font};\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${props => shade(0.2, props.theme.font)};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: ${props => props.theme.secondary};\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.2s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-left: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${props => shade(0.2, props.theme.secondary)};\r\n    }\r\n  }\r\n`\r\n\r\nexport const Background = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { FiArrowRight, FiMail, FiLock } from 'react-icons/fi'\r\nimport { Form } from '@unform/web'\r\nimport { FormHandles } from '@unform/core'\r\nimport * as Yup from 'yup'\r\n\r\nimport { useAuth } from '../../hooks/auth'\r\nimport { useToast } from '../../hooks/toast'\r\nimport getValidationErrors from '../../utils/getValidationErrors'\r\n\r\nimport medicineImg from '../../assets/images/medicine.svg'\r\n\r\nimport Input from '../../components/Input'\r\nimport Button from '../../components/Button'\r\nimport GoogleRecaptcha from '../../components/GoogleRecaptcha'\r\n\r\nimport { Container, Content, AnimationContainer, Background } from './styles'\r\n\r\ninterface ISignInFormData {\r\n  email: string\r\n  password: string\r\n}\r\n\r\ninterface IHandleVerifyCallback {\r\n  (token: string | null): void\r\n}\r\n\r\ninterface IHandleSubmitCallback {\r\n  (data: ISignInFormData): void\r\n}\r\n\r\nconst SignIn: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null)\r\n\r\n  const [isRecaptcha, setIsRecaptcha] = useState(false)\r\n\r\n  const { signIn } = useAuth()\r\n  const { addToast } = useToast()\r\n  const history = useHistory()\r\n\r\n  const handleVerifyCallback = useCallback<IHandleVerifyCallback>(token => {\r\n    setIsRecaptcha(!!token)\r\n  }, [])\r\n\r\n  const handleSubmit = useCallback<IHandleSubmitCallback>(\r\n    async data => {\r\n      formRef.current?.setErrors({})\r\n\r\n      try {\r\n        const schema = Yup.object().shape({\r\n          email: Yup.string()\r\n            .required('E-mail obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n\r\n          password: Yup.string().required('Senha obrigatória'),\r\n        })\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        })\r\n\r\n        await signIn({\r\n          email: data.email,\r\n          password: data.password,\r\n        })\r\n\r\n        history.push('/dashboard')\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err)\r\n\r\n          formRef.current?.setErrors(errors)\r\n\r\n          return\r\n        }\r\n\r\n        addToast({\r\n          title: 'Erro na autenticação',\r\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais.',\r\n          type: 'error',\r\n        })\r\n      }\r\n    },\r\n    [signIn, addToast, history],\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Bem-vindo!</h1>\r\n            <h3>Faça seu login</h3>\r\n\r\n            <Input\r\n              name=\"email\"\r\n              icon={FiMail}\r\n              placeholder=\"E-mail\"\r\n              type=\"email\"\r\n            />\r\n\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              placeholder=\"Senha\"\r\n              type=\"password\"\r\n            />\r\n\r\n            <GoogleRecaptcha onChange={handleVerifyCallback} />\r\n\r\n            <Button disabled={!isRecaptcha} type=\"submit\">\r\n              Entrar\r\n            </Button>\r\n\r\n            <Link to=\"/forgot-password\">Esqueci a senha</Link>\r\n          </Form>\r\n\r\n          <Link to=\"/signup\">\r\n            Não possui conta? Faça o seu Cadastro!\r\n            <FiArrowRight />\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n\r\n      <Background>\r\n        <img src={medicineImg} alt=\"doctors\" />\r\n      </Background>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import styled, { css } from 'styled-components'\r\nimport { lighten } from 'polished'\r\n\r\nimport Tooltip from '../ToolTip'\r\n\r\ninterface IContainerProps {\r\n  isFocused: boolean\r\n  isFilled: boolean\r\n  isErrored: boolean\r\n}\r\n\r\nexport const Container = styled.div<IContainerProps>`\r\n  padding: 16px;\r\n  width: 100%;\r\n  max-width: 340px;\r\n\r\n  background: ${props => props.theme.backgroundAuxiliar};\r\n  border-radius: 10px;\r\n  border: 2px solid ${props => props.theme.backgroundAuxiliar};\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  color: ${props => props.theme.font};\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props =>\r\n    props.isFocused &&\r\n    css`\r\n      color: ${props => props.theme.colors.green};\r\n      border-color: ${props => props.theme.colors.green};\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFilled &&\r\n    css`\r\n      color: ${props => props.theme.colors.green};\r\n    `}\r\n  \r\n  ${props =>\r\n    props.isErrored &&\r\n    css`\r\n      border-color: ${props => props.theme.colors.red};\r\n    `}\r\n\r\n  select {\r\n    flex: 1;\r\n    background: transparent;\r\n    border: none;\r\n    font: inherit;\r\n\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n\r\n    color: ${props => props.theme.font};\r\n\r\n    &::placeholder {\r\n      color: ${props => lighten(0.15, props.theme.font)};\r\n    }\r\n\r\n    option {\r\n      color: ${props => props.theme.colors.black};\r\n    }\r\n  }\r\n\r\n  svg {\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nexport const Error = styled(Tooltip)`\r\n  height: 20px;\r\n  margin-left: 16px;\r\n\r\n  svg {\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    background: ${props => props.theme.colors.red};\r\n    color: ${props => props.theme.font};\r\n\r\n    &::before {\r\n      border-color: ${props => props.theme.colors.red} transparent;\r\n    }\r\n  }\r\n`\r\n","import React, {\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n  SelectHTMLAttributes,\r\n} from 'react'\r\nimport { useField } from '@unform/core'\r\nimport { IconBaseProps } from 'react-icons'\r\nimport { FiAlertCircle } from 'react-icons/fi'\r\n\r\nimport { Container, Error } from './styles'\r\n\r\ninterface ISelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  name: string\r\n  icon?: React.ComponentType<IconBaseProps>\r\n  options: { label: string; value: string | number }[]\r\n  placeholder: string\r\n}\r\n\r\nconst Select: React.FC<ISelectProps> = ({\r\n  name,\r\n  icon: Icon,\r\n  options,\r\n  placeholder,\r\n  ...rest\r\n}) => {\r\n  const selectRef = useRef<HTMLSelectElement>(null)\r\n  const [isFocused, setIsFocused] = useState(false)\r\n  const [isFilled, setIsFilled] = useState(false)\r\n\r\n  const { fieldName, defaultValue, registerField, error } = useField(name)\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true)\r\n  }, [])\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false)\r\n\r\n    setIsFilled(!!selectRef.current?.value)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: selectRef.current,\r\n      path: 'value',\r\n    })\r\n  }, [fieldName, registerField])\r\n\r\n  return (\r\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\r\n      {Icon && <Icon size={20} title={placeholder} />}\r\n      <select\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        defaultValue={defaultValue ?? ''}\r\n        ref={selectRef}\r\n        {...rest}\r\n      >\r\n        <option disabled value={''}>\r\n          {placeholder}\r\n        </option>\r\n        {options.map((option, index) => {\r\n          return (\r\n            <option key={index} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          )\r\n        })}\r\n      </select>\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"#ff5050\" title={error} size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\nexport default Select\r\n","import styled, { keyframes } from 'styled-components'\r\nimport { shade, readableColor } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  padding: 32px;\r\n  height: 100vh;\r\n\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 70% 15%`\r\n      : `url(${darkTransparentLogo}) no-repeat 70% 15%`\r\n  }};\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`\r\n\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst appearFromRight = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(50px);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${appearFromRight} 1s;\r\n\r\n  form {\r\n    margin: 40px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h3 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: ${props => props.theme.font};\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${props => shade(0.2, props.theme.font)};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: ${props => props.theme.secondary};\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.2s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-left: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${props => shade(0.2, props.theme.secondary)};\r\n    }\r\n  }\r\n`\r\n\r\nexport const Background = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`\r\n","import React, { useCallback, useRef } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {\r\n  FiArrowLeft,\r\n  FiUser,\r\n  FiCalendar,\r\n  FiPhone,\r\n  FiMail,\r\n  FiLock,\r\n} from 'react-icons/fi'\r\nimport { Form } from '@unform/web'\r\nimport { FormHandles } from '@unform/core'\r\nimport * as Yup from 'yup'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport { useToast } from '../../hooks/toast'\r\nimport getValidationErrors from '../../utils/getValidationErrors'\r\n\r\nimport doctorsImg from '../../assets/images/doctors.svg'\r\n\r\nimport Input from '../../components/Input'\r\nimport Select from '../../components/Select'\r\nimport Button from '../../components/Button'\r\n\r\nimport { Container, Content, AnimationContainer, Background } from './styles'\r\n\r\ninterface ISignUpFormData {\r\n  name: string\r\n  birthday: string\r\n  sex: string\r\n  cellphone: string\r\n  email: string\r\n  password: string\r\n  passwordConfirmation: string\r\n  isAdmin: boolean\r\n}\r\n\r\ninterface IHandleSubmitCallback {\r\n  (data: ISignUpFormData): void\r\n}\r\n\r\nconst SignUp: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null)\r\n\r\n  const { addToast } = useToast()\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = useCallback<IHandleSubmitCallback>(\r\n    async data => {\r\n      formRef.current?.setErrors({})\r\n\r\n      try {\r\n        const schema = Yup.object().shape({\r\n          name: Yup.string().required('Nome obrigatório'),\r\n\r\n          birthday: Yup.string().min(8, 'Data de Nascimento obrigatória'),\r\n\r\n          sex: Yup.string()\r\n            .required('Sexo obrigatório')\r\n            .oneOf(['M', 'F'], 'Sexo Inválido'),\r\n\r\n          cellphone: Yup.string().required('Telefone obrigatório'),\r\n\r\n          email: Yup.string()\r\n            .required('E-mail obrigatório')\r\n            .email('Digite um E-mail válido'),\r\n\r\n          password: Yup.string().required('Senha obrigatória'),\r\n\r\n          passwordConfirmation: Yup.string()\r\n            .oneOf([Yup.ref('password'), undefined], 'Senhas não coincidem')\r\n            .required('Confirmação de Senha Obrigatória'),\r\n        })\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        })\r\n\r\n        data.cellphone = data.cellphone.replace(/\\D+/g, '')\r\n        delete data.passwordConfirmation\r\n        data.isAdmin= false\r\n\r\n        await api.post('user', {\r\n          ...data,\r\n        })\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Cadastro realizado!',\r\n          description: 'Você já pode fazer o seu logon no Sallut!',\r\n        })\r\n\r\n        history.push('/')\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err)\r\n\r\n          formRef.current?.setErrors(errors)\r\n          return\r\n        }\r\n\r\n        console.log(err.response)\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro no cadastro',\r\n          description: 'Ocorreu um erro ao fazer cadastro, tente novamente.',\r\n        })\r\n      }\r\n    },\r\n    [addToast, history],\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Background>\r\n        <img src={doctorsImg} alt=\"medicine\" />\r\n      </Background>\r\n\r\n      <Content>\r\n        <AnimationContainer>\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Bem-vindo!</h1>\r\n            <h3>Faça o seu cadastro</h3>\r\n\r\n            <Input\r\n              name=\"name\"\r\n              icon={FiUser}\r\n              placeholder=\"Nome Completo\"\r\n              type=\"text\"\r\n            />\r\n\r\n            <Input\r\n              name=\"birthday\"\r\n              icon={FiCalendar}\r\n              placeholder=\"Data de Nascimento\"\r\n              type=\"date\"\r\n            />\r\n\r\n            <Select\r\n              name=\"sex\"\r\n              icon={FiUser}\r\n              placeholder=\"Sexo\"\r\n              options={[\r\n                { label: 'Masculino', value: 'M' },\r\n                { label: 'Feminino', value: 'F' },\r\n              ]}\r\n            />\r\n\r\n            <Input\r\n              name=\"cellphone\"\r\n              icon={FiPhone}\r\n              placeholder=\"Celular\"\r\n              type=\"tel\"\r\n            />\r\n\r\n            <Input\r\n              name=\"email\"\r\n              icon={FiMail}\r\n              placeholder=\"E-mail\"\r\n              type=\"email\"\r\n            />\r\n\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              placeholder=\"Senha\"\r\n              type=\"password\"\r\n            />\r\n\r\n            <Input\r\n              name=\"passwordConfirmation\"\r\n              icon={FiLock}\r\n              placeholder=\"Confirmação da Senha\"\r\n              type=\"password\"\r\n            />\r\n\r\n            <Button type=\"submit\">Cadastrar</Button>\r\n          </Form>\r\n\r\n          <Link to=\"/\">\r\n            <FiArrowLeft />\r\n            Já possui conta? Faça Login!\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SignUp","import styled, { keyframes } from 'styled-components'\r\nimport { shade, readableColor } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  padding: 32px;\r\n  height: 100vh;\r\n\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 70% 15%`\r\n      : `url(${darkTransparentLogo}) no-repeat 70% 15%`\r\n  }};\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`\r\n\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst appearFromLeft = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-50px);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${appearFromLeft} 1s;\r\n\r\n  form {\r\n    margin: 40px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: ${props => props.theme.font};\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${props => shade(0.2, props.theme.font)};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: ${props => props.theme.secondary};\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.2s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${props => shade(0.2, props.theme.secondary)};\r\n    }\r\n  }\r\n`\r\n\r\nexport const Background = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`\r\n","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FiLogIn, FiMail } from 'react-icons/fi'\r\nimport { Form } from '@unform/web'\r\nimport { FormHandles } from '@unform/core'\r\nimport * as Yup from 'yup'\r\n\r\nimport { useToast } from '../../hooks/toast'\r\nimport getValidationErrors from '../../utils/getValidationErrors'\r\nimport api from '../../services/api'\r\n\r\nimport medicineImg from '../../assets/images/medicine.svg'\r\n\r\nimport Input from '../../components/Input'\r\nimport Button from '../../components/Button'\r\n\r\nimport { Container, Content, AnimationContainer, Background } from './styles'\r\n\r\ninterface IForgotPasswordFormData {\r\n  email: string\r\n}\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const formRef = useRef<FormHandles>(null)\r\n\r\n  const { addToast } = useToast()\r\n  // const history = useHistory()\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: IForgotPasswordFormData) => {\r\n      setLoading(true)\r\n      formRef.current?.setErrors({})\r\n\r\n      try {\r\n        const schema = Yup.object().shape({\r\n          email: Yup.string()\r\n            .required('E-mail obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n        })\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        })\r\n\r\n        // Reclaim Password\r\n\r\n        await api.post('/password/forgot', {\r\n          email: data.email,\r\n        })\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'E-mail de recuperação enviado',\r\n          description:\r\n            'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada',\r\n        })\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err)\r\n\r\n          formRef.current?.setErrors(errors)\r\n\r\n          return\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na recuperação de senha',\r\n          description:\r\n            'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.',\r\n        })\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    },\r\n    [addToast],\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Recuperar Senha</h1>\r\n\r\n            <Input\r\n              name=\"email\"\r\n              icon={FiMail}\r\n              placeholder=\"E-mail\"\r\n              type=\"email\"\r\n            />\r\n\r\n            <Button loading={loading} type=\"submit\">\r\n              Recuperar\r\n            </Button>\r\n          </Form>\r\n\r\n          <Link to=\"/\">\r\n            <FiLogIn />\r\n            Voltar ao login\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n\r\n      <Background>\r\n        <img src={medicineImg} alt=\"doctors\" />\r\n      </Background>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import styled, { keyframes } from 'styled-components'\r\nimport { shade, readableColor } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  padding: 32px;\r\n  height: 100vh;\r\n\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 70% 15%`\r\n      : `url(${darkTransparentLogo}) no-repeat 70% 15%`\r\n  }};\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`\r\n\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst appearFromLeft = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-50px);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${appearFromLeft} 1s;\r\n\r\n  form {\r\n    margin: 40px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: ${props => props.theme.font};\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${props => shade(0.2, props.theme.font)};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: ${props => props.theme.secondary};\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.2s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-left: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${props => shade(0.2, props.theme.secondary)};\r\n    }\r\n  }\r\n`\r\n\r\nexport const Background = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`\r\n","import React, { useCallback, useRef } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { FiLock } from 'react-icons/fi'\r\nimport { Form } from '@unform/web'\r\nimport { FormHandles } from '@unform/core'\r\nimport * as Yup from 'yup'\r\n\r\nimport { useToast } from '../../hooks/toast'\r\nimport getValidationErrors from '../../utils/getValidationErrors'\r\n\r\nimport medicineImg from '../../assets/images/medicine.svg'\r\n\r\nimport Input from '../../components/Input'\r\nimport Button from '../../components/Button'\r\n\r\nimport { Container, Content, AnimationContainer, Background } from './styles'\r\nimport api from '../../services/api'\r\n\r\ninterface IResetPasswordFormData {\r\n  password: string\r\n  passwordConfirmation: string\r\n}\r\n\r\nconst ResetPassword: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null)\r\n\r\n  const { addToast } = useToast()\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: IResetPasswordFormData) => {\r\n      formRef.current?.setErrors({})\r\n\r\n      try {\r\n        const schema = Yup.object().shape({\r\n          password: Yup.string().required('Senha obrigatória'),\r\n\r\n          passwordConfirmation: Yup.string()\r\n            .oneOf([Yup.ref('password'), undefined], 'Senhas não coincidem')\r\n            .required('Confirmação de Senha Obrigatória'),\r\n        })\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        })\r\n\r\n        const { password, passwordConfirmation } = data\r\n        const token = location.search.replace('?token=', '')\r\n\r\n        if (!token) {\r\n          throw new Error()\r\n        }\r\n\r\n        await api.post('/password/reset', {\r\n          password,\r\n          passwordConfirmation,\r\n          token,\r\n        })\r\n\r\n        history.push('/')\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err)\r\n\r\n          formRef.current?.setErrors(errors)\r\n\r\n          return\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro ao resetar senha',\r\n          description: 'Ocorreu um erro ao resetar sua senha, tente novamente.',\r\n        })\r\n      }\r\n    },\r\n    [addToast, history, location.search],\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Resetar senha</h1>\r\n\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              placeholder=\"Senha\"\r\n              type=\"password\"\r\n            />\r\n\r\n            <Input\r\n              name=\"passwordConfirmation\"\r\n              icon={FiLock}\r\n              placeholder=\"Confirmação da Senha\"\r\n              type=\"password\"\r\n            />\r\n\r\n            <Button type=\"submit\">Entrar</Button>\r\n          </Form>\r\n        </AnimationContainer>\r\n      </Content>\r\n\r\n      <Background>\r\n        <img src={medicineImg} alt=\"doctors\" />\r\n      </Background>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n","import styled from 'styled-components'\r\nimport { shade } from 'polished'\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 12px;\r\n  overflow: hidden;\r\n  margin: 16px;\r\n\r\n  border-radius: 50%;\r\n  background: ${props => props.theme.alternativeBackground};\r\n  transition: background-color 0.4s;\r\n\r\n  &:hover {\r\n    background: ${props => shade(0.2, props.theme.alternativeBackground)};\r\n  }\r\n\r\n  button {\r\n    border: 0;\r\n    background: transparent;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    svg {\r\n      color: ${props => props.theme.fontAuxiliar};\r\n      width: 34px;\r\n      height: 34px;\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { FiSun, FiMoon } from 'react-icons/fi'\r\n\r\nimport { useTheme } from '../../hooks/theme'\r\n\r\nimport { Container } from './styles'\r\n\r\nconst ThemeSwitchButton: React.FC = () => {\r\n  const { changeTheme, isDarkMode } = useTheme()\r\n\r\n  return (\r\n    <Container>\r\n      <button onClick={changeTheme}>\r\n        {isDarkMode ? <FiSun /> : <FiMoon />}\r\n      </button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ThemeSwitchButton\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.font};\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button, textarea {\r\n    font-family: Roboto, sans-serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6, strong {\r\n    font-weight: 500;\r\n  }\r\n\r\n  table, thead, tbody, tfoot, tr, th, td {\r\n    display: block;\r\n    width: auto;\r\n    height: auto;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: none;\r\n    border-collapse: inherit;\r\n    border-spacing: 0;\r\n    border-color: inherit;\r\n    vertical-align: inherit;\r\n    text-align: left;\r\n    font-weight: inherit;\r\n    -webkit-border-horizontal-spacing: 0;\r\n    -webkit-border-vertcial-spacing: 0;\r\n  }\r\n\r\n  th, td {\r\n    display: inline;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  #root {\r\n    margin: 0 auto;\r\n    /* padding: 40px 20px; */\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { DefaultTheme } from 'styled-components'\r\n\r\nconst darkTheme: DefaultTheme = {\r\n  primary: '#28262e',\r\n  secondary: '#20fc8f',\r\n  background: '#312e38',\r\n  backgroundAuxiliar: '#28262e',\r\n  font: '#fff',\r\n  fontAuxiliar: '#1d1c22',\r\n  alternativeBackground: '#f0f0F5',\r\n  colors: {\r\n    white: '#fff',\r\n    darkGray: '#333',\r\n    black: '#312e38',\r\n    red: '#f8333c',\r\n    yellow: '#f18f01',\r\n    green: '#20fc8f',\r\n    blue: '#0084b8',\r\n    purple: '#531cb3',\r\n  },\r\n}\r\n\r\nexport default darkTheme\r\n","import { DefaultTheme } from 'styled-components'\r\n\r\nconst lightTheme: DefaultTheme = {\r\n  primary: '#E0E0E0',\r\n  secondary: '#2fb186',\r\n  background: '#f0f0F5 ',\r\n  backgroundAuxiliar: '#D9D9D9',\r\n  font: '#272932',\r\n  fontAuxiliar: '#f4ede8',\r\n  alternativeBackground: '#312e38',\r\n  colors: {\r\n    white: '#fff',\r\n    darkGray: '#333',\r\n    black: '#272932',\r\n    red: '#f8333c',\r\n    yellow: '#f18f01',\r\n    green: '#2fb186',\r\n    blue: '#0084b8',\r\n    purple: '#531cb3',\r\n  },\r\n}\r\n\r\nexport default lightTheme\r\n","import React, { createContext, useCallback, useState, useContext } from 'react'\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components'\r\n\r\nimport ThemeSwitchButton from '../components/ThemeSwitchButton'\r\n\r\nimport GlobalStyle from '../styles/global'\r\n\r\nimport darkTheme from '../styles/themes/dark'\r\nimport lightTheme from '../styles/themes/light'\r\n\r\nexport interface ITheme {\r\n  primary: string\r\n  secondary: string\r\n  background: string\r\n  backgroundAuxiliar: string\r\n  font: string\r\n  fontAuxiliar: string\r\n  alternativeBackground: string\r\n  colors: {\r\n    white: string\r\n    darkGray: string\r\n    black: string\r\n    red: string\r\n    yellow: string\r\n    green: string\r\n    blue: string\r\n    purple: string\r\n  }\r\n}\r\n\r\ninterface IThemeContextData {\r\n  isDarkMode: boolean\r\n  changeTheme(): void\r\n}\r\n\r\nconst ThemeContext = createContext<IThemeContextData>({} as IThemeContextData)\r\n\r\nexport const ThemeProvider: React.FC = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(() => {\r\n    const darkMode = localStorage.getItem('@SallutApp:darkMode')\r\n\r\n    if (darkMode) {\r\n      return JSON.parse(darkMode)\r\n    }\r\n\r\n    return false\r\n  })\r\n\r\n  const changeTheme = useCallback(() => {\r\n    localStorage.setItem('@SallutApp:darkMode', JSON.stringify(!isDarkMode))\r\n\r\n    setIsDarkMode(!isDarkMode)\r\n  }, [isDarkMode])\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, changeTheme }}>\r\n      <StyledThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n        {children}\r\n        <GlobalStyle />\r\n        <ThemeSwitchButton />\r\n      </StyledThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useTheme(): IThemeContextData {\r\n  const context = useContext(ThemeContext)\r\n\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within an ThemeProvider')\r\n  }\r\n\r\n  return context\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const LogoImage = styled.img`\r\n  object-fit: contain;\r\n`\r\n","import React from 'react'\r\n\r\nimport { useTheme } from '../../hooks/theme'\r\n\r\nimport lightLogoImg from '../../assets/images/logo.svg'\r\nimport darkLogoImg from '../../assets/images/logo-alt.svg'\r\n\r\nimport { LogoImage } from './styles'\r\n\r\nconst Logo: React.FC = () => {\r\n  const { isDarkMode } = useTheme()\r\n\r\n  return (\r\n    <LogoImage\r\n      src={isDarkMode ? darkLogoImg : lightLogoImg}\r\n      alt=\"Sallut Logo\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import styled from 'styled-components'\r\nimport { readableColor, shade } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 90% 85%`\r\n      : `url(${darkTransparentLogo}) no-repeat 90% 85%`\r\n  }};\r\n`\r\n\r\nexport const Header = styled.header`\r\n  padding: 32px 0px;\r\n  background: ${props => props.theme.primary};\r\n`\r\n\r\nexport const HeaderContent = styled.div`\r\n  max-width: 1120px;\r\n  margin: 0 auto;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > img {\r\n    height: 80px;\r\n  }\r\n\r\n  button {\r\n    margin-left: auto;\r\n    background: transparent;\r\n    border: 0;\r\n\r\n    & svg {\r\n      color: ${props => props.theme.font};\r\n\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 80px;\r\n\r\n  img {\r\n    width: 56px;\r\n    height: 56px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  svg {\r\n    background: ${props => props.theme.background};\r\n    padding: 10px;\r\n    width: 56px;\r\n    height: 56px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 16px;\r\n    line-height: 24px;\r\n\r\n    span {\r\n      color: ${props => props.theme.font};\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      color: ${props => props.theme.secondary};\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${props => shade(0.2, props.theme.secondary)};\r\n      }\r\n\r\n      strong {\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Content = styled.main`\r\n  max-width: 1120px;\r\n  margin: 64px auto;\r\n\r\n  ul {\r\n    flex: 1;\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    list-style: none;\r\n\r\n    li {\r\n      display: flex;\r\n      justify-content: center;\r\n\r\n      padding: 24px;\r\n      position: relative;\r\n    }\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { shade } from 'polished'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Container = styled(Link)`\r\n  text-decoration: none;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n\r\n  color: ${props => props.theme.font};\r\n  background: ${props => props.theme.primary};\r\n  transition: background-color 0.2s;\r\n\r\n  padding: 28px 14px;\r\n  border-radius: 16px;\r\n\r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n\r\n    &:hover {\r\n      background: ${props => props.theme.secondary};\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: ${props => shade(0.2, props.theme.primary)};\r\n  }\r\n\r\n  max-width: 360px;\r\n  flex: 1;\r\n\r\n  svg {\r\n    color: ${props => props.theme.colors.green};\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n\r\n  strong {\r\n    margin-top: 14px;\r\n\r\n    align-self: right;\r\n    font-size: 20px;\r\n  }\r\n\r\n  span {\r\n    margin-top: 14px;\r\n\r\n    text-align: left;\r\n    font-size: 15px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { IconBaseProps } from 'react-icons'\r\n\r\nimport { Container } from './styles'\r\n\r\ninterface ICardProps {\r\n  title: string\r\n  description?: string\r\n  icon?: React.ComponentType<IconBaseProps>\r\n  route: string\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({\r\n  title,\r\n  description = '',\r\n  icon: Icon,\r\n  route,\r\n}) => {\r\n  return (\r\n    <Container to={route}>\r\n      {Icon && <Icon />}\r\n      <strong>{title}</strong>\r\n      {description && <span>{description}</span>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport {\r\n  FiPower,\r\n  FiUser,\r\n  FiMapPin,\r\n  FiClipboard,\r\n  FiPlusCircle,\r\n} from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useAuth } from '../../hooks/auth'\r\n\r\nimport Logo from '../../components/Logo'\r\n\r\nimport { Container, Header, HeaderContent, Profile, Content } from './styles'\r\nimport Card from '../../components/Card'\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { signOut, user } = useAuth()\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <HeaderContent>\r\n          <Logo />\r\n\r\n          <Profile>\r\n            {user.avatarUrl ? (\r\n              <img src={user.avatarUrl} alt={user.name} />\r\n            ) : (\r\n              <FiUser />\r\n            )}\r\n\r\n            <div>\r\n              <span>Bem-vindo,</span>\r\n              <Link to=\"/profile\">\r\n                <strong>{user.name}</strong>\r\n              </Link>\r\n            </div>\r\n          </Profile>\r\n\r\n          <button type=\"button\" onClick={signOut}>\r\n            <FiPower size={20} />\r\n          </button>\r\n        </HeaderContent>\r\n      </Header>\r\n\r\n      <Content>\r\n        <ul>\r\n          <li>\r\n            <Card\r\n              title=\"Hospitais Próximos\"\r\n              description=\"Veja hospitais próximos a você!\"\r\n              icon={FiMapPin}\r\n              route=\"/hospitals-nearby\"\r\n            />\r\n          </li>\r\n          <li>\r\n            <Card\r\n              title=\"Suas fichas médicas\"\r\n              description=\"Acompanhe as suas passagens pelos hospitais parceiros!\"\r\n              icon={FiClipboard}\r\n              route=\"/medical-records\"\r\n            />\r\n          </li>\r\n          <li>\r\n            <Card\r\n              title=\"Registrar nova ficha\"\r\n              description=\"Faça um novo encaminhamento para um hospital!\"\r\n              icon={FiPlusCircle}\r\n              route=\"/new-medical-record\"\r\n            />\r\n          </li>\r\n        </ul>\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import styled from 'styled-components'\r\nimport { readableColor, shade } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 90% 85%`\r\n      : `url(${darkTransparentLogo}) no-repeat 90% 85%`\r\n  }};\r\n\r\n  > header {\r\n    height: 144px;\r\n    background: ${props => props.theme.primary};\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    div {\r\n      width: 100%;\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n\r\n      svg {\r\n        color: ${props => props.theme.font};\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  margin: -140px auto 0;\r\n\r\n  form {\r\n    margin: 40px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n      font-size: 20px;\r\n      text-align: left;\r\n    }\r\n\r\n    a {\r\n      color: ${props => props.theme.font};\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${props => shade(0.2, props.theme.font)};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const AvatarInput = styled.div`\r\n  margin-bottom: 32px;\r\n  position: relative;\r\n\r\n  align-self: center;\r\n\r\n  img {\r\n    width: 186px;\r\n    height: 186px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  > svg {\r\n    background: ${props => props.theme.background};\r\n    padding: 20px;\r\n    border: 2px solid ${props => props.theme.font};\r\n\r\n    width: 186px;\r\n    height: 186px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  label {\r\n    position: absolute;\r\n    width: 48px;\r\n    height: 48px;\r\n    background: ${props => props.theme.colors.green};\r\n    border-radius: 50%;\r\n\r\n    right: 0;\r\n    bottom: 0;\r\n\r\n    cursor: pointer;\r\n    border: 0;\r\n    transition: background-color 0.2s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    input {\r\n      display: none;\r\n    }\r\n\r\n    svg {\r\n      width: 20px;\r\n      height: 20px;\r\n      color: ${props => props.theme.darkGray};\r\n    }\r\n\r\n    &:hover {\r\n      background: ${props => shade(0.2, props.theme.colors.green)};\r\n    }\r\n  }\r\n`\r\n","import React, { useCallback, useRef, ChangeEvent } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport {\r\n  FiUser,\r\n  FiPhone,\r\n  FiMail,\r\n  FiCamera,\r\n  FiArrowLeft,\r\n} from 'react-icons/fi'\r\nimport { Form } from '@unform/web'\r\nimport { FormHandles } from '@unform/core'\r\nimport * as Yup from 'yup'\r\nimport api from '../../services/api'\r\nimport { useToast } from '../../hooks/toast'\r\nimport getValidationErrors from '../../utils/getValidationErrors'\r\n\r\nimport Input from '../../components/Input'\r\nimport Button from '../../components/Button'\r\n\r\nimport { Container, Content, AvatarInput } from './styles'\r\nimport { useAuth } from '../../hooks/auth'\r\n\r\ninterface IProfileFormData {\r\n  name: string\r\n  sex: string\r\n // birthdayDate: string\r\n  cellphone: string\r\n // email: string\r\n}\r\n\r\ninterface IHandleSubmit {\r\n  (data: IProfileFormData): void\r\n}\r\n\r\ninterface IHandleAvatarChange {\r\n  (event: ChangeEvent<HTMLInputElement>): void\r\n}\r\n\r\nconst Profile: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null)\r\n\r\n  const { addToast } = useToast()\r\n  const { user, updateUser } = useAuth()\r\n  //const history = useHistory()\r\n\r\n  const handleSubmit = useCallback<IHandleSubmit>(\r\n    async data => {\r\n      formRef.current?.setErrors({})\r\n      console.log(data)\r\n\r\n      try {\r\n        const schema = Yup.object().shape({\r\n          name: Yup.string().required('Nome obrigatório'),\r\n          birthdayDate: Yup.string().min(8, 'Data de nascimento obrigatória'),\r\n          telephone: Yup.string().required('Telefone obrigatório'),\r\n          email: Yup.string()\r\n            .required('E-mail obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n        })\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        })\r\n        \r\n        const formData = {\r\n          name: data.name,\r\n          sex: data.sex,\r\n         // birthdayDate: data.birthdayDate,\r\n          cellphone: data.cellphone\r\n         // email: data.email\r\n        }\r\n        console.log(formData)\r\n\r\n        await api.put('user', formData)\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Alterações realizadas!',\r\n          description: 'Você já pode fazer o seu logon no Sallut!',\r\n        })\r\n      //  history.push('/')\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err)\r\n\r\n          formRef.current?.setErrors(errors)\r\n          return\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro no cadastro',\r\n          description: 'Ocorreu um erro ao fazer cadastro, tente novamente.',\r\n        })\r\n      }\r\n    },\r\n    [addToast],\r\n  )\r\n\r\n  const handleAvatarChange = useCallback<IHandleAvatarChange>(\r\n    async event => {\r\n      if (event.target.files) {\r\n        const data = new FormData()\r\n\r\n        data.append('avatar', event.target.files[0])\r\n\r\n        const response = await api.patch('/avatar')\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Avatar atualizado!',\r\n        })\r\n\r\n        updateUser(response.data)\r\n      }\r\n    },\r\n    [addToast, updateUser],\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div>\r\n          <Link to=\"/dashboard\">\r\n            <FiArrowLeft />\r\n          </Link>\r\n        </div>\r\n      </header>\r\n\r\n      <Content>\r\n        <Form\r\n        key={user.id}\r\n          ref={formRef}\r\n          initialData={{\r\n            ...user,\r\n          }}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <AvatarInput>\r\n            {user.avatarUrl ? (\r\n              <img src={user.avatarUrl} alt={user.name} />\r\n            ) : (\r\n              <FiUser />\r\n            )}\r\n            <label htmlFor=\"avatar\">\r\n              <FiCamera />\r\n\r\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\r\n            </label>\r\n          </AvatarInput>\r\n\r\n          <h1>Meu Perfil</h1>\r\n\r\n          <Input\r\n            name=\"name\"\r\n            icon={FiUser}\r\n            placeholder=\"Nome Completo\"\r\n            type=\"text\"\r\n          />\r\n\r\n         <Input\r\n            name=\"sex\"\r\n            icon={FiUser}\r\n            placeholder=\"Genero\"\r\n            type=\"text\"\r\n          />\r\n\r\n          <Input\r\n            name=\"cellphone\"\r\n            icon={FiPhone}\r\n            placeholder=\"Celular\"\r\n            type=\"tel\"\r\n          />\r\n          \r\n          <Input\r\n            name=\"birthday\"\r\n            icon={FiUser}\r\n            placeholder=\"Data de nascimento\"\r\n            type=\"tel\"\r\n          />\r\n\r\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" type=\"email\" />\r\n\r\n          <Button type=\"submit\">Confirmar Mudanças</Button>\r\n        </Form>\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\nexport default Profile","import axios from 'axios'\r\n\r\nconst apiMaps = axios.create({\r\n  baseURL:\r\n    'https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/',\r\n  headers: {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Content-Type': 'application/json',\r\n  },\r\n})\r\n\r\nexport default apiMaps\r\n","import styled from 'styled-components'\r\nimport { readableColor, shade } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 90% 85%`\r\n      : `url(${darkTransparentLogo}) no-repeat 90% 85%`\r\n  }};\r\n\r\n  > header {\r\n    height: 144px;\r\n    background: ${props => props.theme.primary};\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    div {\r\n      width: 100%;\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n\r\n      svg {\r\n        color: ${props => props.theme.font};\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Content = styled.main`\r\n  max-width: 1120px;\r\n  max-height: 450px;\r\n\r\n  margin: 64px auto;\r\n  padding: 0px 32px;\r\n\r\n  display: flex;\r\n\r\n  > div {\r\n    flex: 2;\r\n    width: 100%;\r\n\r\n    background: ${props => props.theme.primary};\r\n  }\r\n\r\n  aside {\r\n    margin-left: 24px;\r\n\r\n    flex: 1;\r\n    width: 100%;\r\n    height: 450px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background: ${props => props.theme.primary};\r\n\r\n    padding: 15px;\r\n    overflow: auto;\r\n  }\r\n\r\n  div,\r\n  aside {\r\n    border-radius: 8px;\r\n  }\r\n`\r\n\r\nexport const AddressContainer = styled.span`\r\n  width: 100%;\r\n  height: 56px;\r\n\r\n  padding: 8px;\r\n  border-radius: 8px;\r\n  background: ${props => props.theme.background};\r\n\r\n  display: flex;\r\n\r\n  margin-top: 12px;\r\n\r\n  svg {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  div {\r\n    margin-left: 12px;\r\n    background: ${props => props.theme.background};\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    strong {\r\n      font-size: 20px;\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      font-size: 16px;\r\n      color: ${props => props.theme.secondary};\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${props => shade(0.2, props.theme.secondary)};\r\n      }\r\n    }\r\n  }\r\n`\r\n","/* eslint-disable camelcase */\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport { FiArrowLeft, FiActivity } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\nimport { GoogleMap, Marker } from '@react-google-maps/api'\r\n\r\nimport { useToast } from '../../hooks/toast'\r\nimport apiMaps from '../../services/apiMaps'\r\n\r\nimport { Container, Content, AddressContainer } from './styles'\r\n\r\ninterface GeolocationGeometryLocation {\r\n  lat: number\r\n  lng: number\r\n}\r\n\r\ninterface GeolocationResults {\r\n  business_status: string\r\n  geometry: {\r\n    location: GeolocationGeometryLocation\r\n    viewport: {\r\n      northeast: {\r\n        lat: number\r\n        lng: number\r\n      }\r\n      southwest: {\r\n        lat: number\r\n        lng: number\r\n      }\r\n    }\r\n  }\r\n  name: string\r\n  icon: string\r\n  opening_hours?: {\r\n    open_now: boolean\r\n  }\r\n  place_id: string\r\n  plus_code: {\r\n    compound_code: string\r\n    global_code: string\r\n  }\r\n  rating?: number\r\n  reference: string\r\n  scope: string\r\n  types: string[]\r\n  user_ratings_total: number\r\n  vicinity: string\r\n}\r\n\r\ninterface GoogleGeolocationAPIResponse {\r\n  results: GeolocationResults[]\r\n  status: string\r\n}\r\n\r\nconst HospitalsNearby: React.FC = () => {\r\n  const { addToast } = useToast()\r\n\r\n  const [isBrowserAuthorized, setIsBrowserAuthorized] = useState(false)\r\n  const [currentPosition, setCurrentPosition] = useState({ lat: 0, lng: 0 })\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [, setMap] = useState(null)\r\n\r\n  const [geolocationResults, setGeolocationResults] = useState<\r\n    GeolocationResults[]\r\n  >([] as GeolocationResults[])\r\n\r\n  const [hospitalLocations, setHospitalLocations] = useState<\r\n    GeolocationGeometryLocation[]\r\n  >([])\r\n\r\n  const authorizedGeolocation = useCallback<PositionCallback>(\r\n    async ({ coords }) => {\r\n      try {\r\n        const { latitude, longitude } = coords\r\n\r\n        setCurrentPosition({ lat: latitude, lng: longitude })\r\n\r\n        const { data } = await apiMaps.get<GoogleGeolocationAPIResponse>(\r\n          'place/nearbysearch/json',\r\n          {\r\n            params: {\r\n              location: `${latitude},${longitude}`,\r\n              radius: 1500,\r\n              types: 'hospital',\r\n              key: process.env.REACT_APP_GOOGLE_API_KEY,\r\n            },\r\n          },\r\n        )\r\n\r\n        const { results } = data\r\n        console.log(results)\r\n\r\n        const locations = results.map(result => {\r\n          return result.geometry.location\r\n        })\r\n\r\n        setGeolocationResults([...geolocationResults, ...results])\r\n\r\n        setHospitalLocations([...hospitalLocations, ...locations])\r\n      } catch (error) {\r\n        console.error(error.message)\r\n      } finally {\r\n        setIsBrowserAuthorized(true)\r\n        setIsLoading(false)\r\n      }\r\n    },\r\n    [geolocationResults, hospitalLocations],\r\n  )\r\n\r\n  const unAuthorizedGeolocation = useCallback<PositionErrorCallback>(() => {\r\n    setIsBrowserAuthorized(false)\r\n    setIsLoading(false)\r\n\r\n    addToast({\r\n      title: 'Erro ao carregar mapa',\r\n      description: 'O seu navegador recusou o pedido de autorização',\r\n      type: 'error',\r\n    })\r\n  }, [addToast])\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        authorizedGeolocation,\r\n        unAuthorizedGeolocation,\r\n        { enableHighAccuracy: true },\r\n      )\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const onLoad = useCallback(googleMap => {\r\n    setMap(googleMap)\r\n  }, [])\r\n\r\n  const onUmount = useCallback(() => {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div>\r\n          <Link to=\"/dashboard\">\r\n            <FiArrowLeft />\r\n          </Link>\r\n          <h1>Hospitais Próximos</h1>\r\n        </div>\r\n      </header>\r\n\r\n      <Content>\r\n        <div>\r\n          {isLoading ? (\r\n            <></>\r\n          ) : (\r\n            <>\r\n              {isBrowserAuthorized ? (\r\n                <GoogleMap\r\n                  mapContainerStyle={{ width: '100%', height: '100%' }}\r\n                  center={currentPosition}\r\n                  zoom={10}\r\n                  onLoad={onLoad}\r\n                  onUnmount={onUmount}\r\n                >\r\n                  {hospitalLocations.length > 1 &&\r\n                    hospitalLocations.map((location, index) => (\r\n                      <Marker key={index} position={location} />\r\n                    ))}\r\n\r\n                  <Marker position={currentPosition} />\r\n                </GoogleMap>\r\n              ) : (\r\n                <h2>O acesso a localização foi negado.</h2>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        <aside>\r\n          <h2>Lista de hospitais próximos</h2>\r\n          {geolocationResults.map(({ name, geometry: { location } }, index) => (\r\n            <AddressContainer key={index}>\r\n              <FiActivity />\r\n              <div>\r\n                <strong>{name}</strong>\r\n                <a\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                  href={`https://google.com/maps/?q=${location.lat},${location.lng}`}\r\n                >\r\n                  Acessar no Google Maps\r\n                </a>\r\n              </div>\r\n            </AddressContainer>\r\n          ))}\r\n        </aside>\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HospitalsNearby\r\n","import styled from 'styled-components'\r\nimport { readableColor, shade } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 90% 85%`\r\n      : `url(${darkTransparentLogo}) no-repeat 90% 85%`\r\n  }};\r\n\r\n  > header {\r\n    height: 144px;\r\n    background: ${props => props.theme.primary};\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    div {\r\n      width: 100%;\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n\r\n      svg {\r\n        color: ${props => props.theme.font};\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Content = styled.main`\r\n  max-width: 1120px;\r\n  max-height: 450px;\r\n\r\n  margin: 64px auto;\r\n  padding: 0px 32px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  table {\r\n    background: ${props => props.theme.primary};\r\n    border-radius: 8px;\r\n\r\n    width: 100%;\r\n    height: 500px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    caption {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n\r\n      background: ${props => props.theme.primary};\r\n\r\n      text-align: right;\r\n      font-size: 14px;\r\n\r\n      a {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        color: ${props => props.theme.secondary};\r\n        transition: color 0.2s;\r\n\r\n        &:hover {\r\n          cursor: pointer;\r\n\r\n          color: ${props => shade(0.2, props.theme.secondary)};\r\n        }\r\n\r\n        text-decoration: none;\r\n        svg {\r\n          margin-right: 8px;\r\n        }\r\n      }\r\n\r\n      border-radius: 8px 8px 0px 0px;\r\n      padding: 8px 16px;\r\n    }\r\n\r\n    thead,\r\n    tbody,\r\n    tfoot {\r\n      tr {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        justify-content: space-around;\r\n\r\n        th,\r\n        td {\r\n          flex: 1;\r\n\r\n          text-align: center;\r\n        }\r\n      }\r\n    }\r\n\r\n    thead {\r\n      width: 100%;\r\n      height: 56px;\r\n\r\n      background: ${props => shade(0.2, props.theme.primary)};\r\n\r\n      tr {\r\n        align-items: center;\r\n      }\r\n    }\r\n\r\n    tbody {\r\n      width: 100%;\r\n      height: 100%;\r\n      overflow: auto;\r\n\r\n      tr {\r\n        height: 32px;\r\n        align-items: center;\r\n\r\n        td {\r\n          height: 100%;\r\n        }\r\n\r\n        &:nth-child(odd) {\r\n          background: ${props => shade(0.05, props.theme.primary)};\r\n        }\r\n\r\n        &:nth-child(even) {\r\n          background: ${props => shade(0.15, props.theme.primary)};\r\n        }\r\n      }\r\n    }\r\n\r\n    tfoot {\r\n      width: 100%;\r\n      height: 48px;\r\n\r\n      background: ${props => shade(0.2, props.theme.primary)};\r\n      border-radius: 0px 0px 8px 8px;\r\n\r\n      tr {\r\n        height: 48px;\r\n        align-items: center;\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FiArrowLeft, FiDownload } from 'react-icons/fi'\r\n\r\nimport api from '../../services/api'\r\nimport { useAuth, IUser } from '../../hooks/auth'\r\nimport { useToast } from '../../hooks/toast'\r\n\r\nimport { Container, Content } from './styles'\r\n\r\nconst MedicalRecords: React.FC = () => {\r\n  const downloadLinkRef = useRef<HTMLAnchorElement>(null)\r\n\r\n  const { user, updateUser, token } = useAuth()\r\n  const { addToast } = useToast()\r\n\r\n  const fetchMedicalRecords = useCallback(async () => {\r\n    const response = await api.get<IUser>(`user/${user.id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n\r\n    updateUser(response.data)\r\n  }, [updateUser, user.id, token])\r\n\r\n  const fetchMedicalRecordsFile = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('geraTxt', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      const file = new Blob([response.data], { type: 'text/plain' })\r\n\r\n      if (downloadLinkRef.current) {\r\n        downloadLinkRef.current.href = URL.createObjectURL(file)\r\n        downloadLinkRef.current.download = `medical-records-${Date.now()}.txt`\r\n        downloadLinkRef.current.onclick = null\r\n\r\n        downloadLinkRef.current.click()\r\n\r\n        addToast({\r\n          title: 'Planilha exportada com sucesso!',\r\n          description: 'Aguarde o download para ter a sua planilha em mãos',\r\n          type: 'success',\r\n        })\r\n      }\r\n    } catch (error) {\r\n      addToast({\r\n        title: 'Erro de exportação',\r\n        description:\r\n          'Houve um erro ao tentar exportar o arquivo, tente novamente mais tarde.',\r\n        type: 'error',\r\n      })\r\n    }\r\n  }, [token, addToast])\r\n\r\n  useEffect(() => {\r\n    fetchMedicalRecords()\r\n  }, [fetchMedicalRecords])\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div>\r\n          <Link to=\"/dashboard\">\r\n            <FiArrowLeft />\r\n          </Link>\r\n          <h1>Suas fichas médicas</h1>\r\n        </div>\r\n      </header>\r\n\r\n      <Content>\r\n        <table>\r\n          <caption>\r\n            {/* eslint-disable-next-line */}\r\n            <a onClick={fetchMedicalRecordsFile} ref={downloadLinkRef}>\r\n              <FiDownload /> baixar fichas médicas\r\n            </a>\r\n\r\n            <p>\r\n              {user.medicalRecords.length === 1\r\n                ? `Foi encontrado ${user.medicalRecords.length} registro`\r\n                : `Foram encontrados ${user.medicalRecords.length} registros`}\r\n              .\r\n            </p>\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th>Atendimento</th>\r\n              <th>Classificação</th>\r\n              <th>Peso</th>\r\n              <th>Altura</th>\r\n              <th>Alergia</th>\r\n              <th>Data de registro</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {user.medicalRecords.map((medicalRecord, index) => (\r\n              <tr key={index}>\r\n                {medicalRecord.hospital ? (\r\n                  <td>{medicalRecord.hospital.name}</td>\r\n                ) : (\r\n                  <td>Não registrado</td>\r\n                )}\r\n                <td>{medicalRecord.referral.color}</td>\r\n                <td>{medicalRecord.weight}</td>\r\n                <td>{medicalRecord.height}</td>\r\n                <td>{medicalRecord.allergy}</td>\r\n                <td>{medicalRecord.createdAt}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n\r\n          <tfoot>\r\n            <tr>\r\n              <td></td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MedicalRecords\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  position: relative;\r\n\r\n  padding-left: 34px;\r\n  margin-bottom: 10px;\r\n  height: 22px;\r\n\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  color: ${props => props.theme.font};\r\n  font-size: 16px;\r\n\r\n  & + div,\r\n  & + label {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  &:hover span,\r\n  input:checked ~ span {\r\n    background: ${props => props.theme.secondary};\r\n  }\r\n\r\n  input {\r\n    cursor: pointer;\r\n\r\n    position: absolute;\r\n    opacity: 0;\r\n    height: 0;\r\n    width: 0;\r\n\r\n    &:checked ~ span:after {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  span {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    height: 22px;\r\n    width: 22px;\r\n\r\n    background: ${props => props.theme.backgroundAuxiliar};\r\n\r\n    border: 1px solid ${props => props.theme.primary};\r\n    border-radius: 5px;\r\n    transition: 180ms ease-in-out;\r\n\r\n    &:after {\r\n      content: '';\r\n\r\n      position: absolute;\r\n      left: 6.8px;\r\n      top: 3px;\r\n\r\n      display: none;\r\n\r\n      width: 4px;\r\n      height: 8px;\r\n\r\n      border: solid white;\r\n      border-width: 0 3px 3px 0;\r\n\r\n      transform: rotate(45deg);\r\n    }\r\n  }\r\n`\r\n","import React, { InputHTMLAttributes, useEffect, useRef } from 'react'\r\nimport { useField } from '@unform/core'\r\n\r\nimport { Container } from './styles'\r\n\r\ninterface ICheckBoxProps\r\n  extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'placeholder'> {\r\n  name: string\r\n  label: string\r\n  containerStyle?: React.CSSProperties\r\n}\r\n\r\nconst CheckBox: React.FC<ICheckBoxProps> = ({\r\n  name,\r\n  label,\r\n  containerStyle = {},\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const { fieldName, defaultValue = false, registerField } = useField(name)\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'checked',\r\n    })\r\n  }, [fieldName, registerField])\r\n\r\n  return (\r\n    <Container style={containerStyle}>\r\n      <input\r\n        defaultChecked={defaultValue}\r\n        type=\"checkbox\"\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n      {label}\r\n\r\n      <span />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CheckBox\r\n","import styled, { css } from 'styled-components'\r\nimport { lighten } from 'polished'\r\n\r\nimport Tooltip from '../ToolTip'\r\n\r\ninterface IContainerProps {\r\n  isFocused: boolean\r\n  isFilled: boolean\r\n  isErrored: boolean\r\n}\r\n\r\nexport const Container = styled.div<IContainerProps>`\r\n  padding: 16px;\r\n  width: 100%;\r\n  max-width: 340px;\r\n\r\n  background: ${props => props.theme.backgroundAuxiliar};\r\n  border-radius: 10px;\r\n  border: 2px solid ${props => props.theme.backgroundAuxiliar};\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  color: ${props => props.theme.font};\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props =>\r\n    props.isFocused &&\r\n    css`\r\n      color: ${props => props.theme.colors.green};\r\n      border-color: ${props => props.theme.colors.green};\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFilled &&\r\n    css`\r\n      color: ${props => props.theme.colors.green};\r\n    `}\r\n  \r\n  ${props =>\r\n    props.isErrored &&\r\n    css`\r\n      border-color: ${props => props.theme.colors.red};\r\n    `}\r\n\r\n  textarea {\r\n    flex: 1;\r\n    background: transparent;\r\n    border: 0;\r\n\r\n    width: 232px;\r\n    height: 19px;\r\n\r\n    max-width: 232px;\r\n    min-height: 19px;\r\n    max-height: 232px;\r\n\r\n    color: ${props => props.theme.font};\r\n\r\n    &::placeholder {\r\n      color: ${props => lighten(0.2, props.theme.font)};\r\n    }\r\n  }\r\n\r\n  svg {\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nexport const Error = styled(Tooltip)`\r\n  height: 20px;\r\n  margin-left: 16px;\r\n\r\n  svg {\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    background: ${props => props.theme.colors.red};\r\n    color: ${props => props.theme.font};\r\n\r\n    &::before {\r\n      border-color: ${props => props.theme.colors.red} transparent;\r\n    }\r\n  }\r\n`\r\n","import React, {\r\n  TextareaHTMLAttributes,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n} from 'react'\r\nimport { IconBaseProps } from 'react-icons'\r\nimport { FiAlertCircle } from 'react-icons/fi'\r\nimport { useField } from '@unform/core'\r\n\r\nimport { Container, Error } from './styles'\r\n\r\ninterface IMultilineInputProps\r\n  extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n  name: string\r\n  containerStyle?: React.CSSProperties\r\n  icon?: React.ComponentType<IconBaseProps>\r\n  placeholder: string\r\n}\r\n\r\nconst MultilineInput: React.FC<IMultilineInputProps> = ({\r\n  name,\r\n  icon: Icon,\r\n  containerStyle = {},\r\n  placeholder,\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLTextAreaElement>(null)\r\n  const [isFocused, setIsFocused] = useState(false)\r\n  const [isFilled, setIsFilled] = useState(false)\r\n\r\n  const { fieldName, defaultValue, error, registerField } = useField(name)\r\n\r\n  const handleMultilineInputFocus = useCallback(() => {\r\n    setIsFocused(true)\r\n  }, [])\r\n\r\n  const handleMultilineInputBlur = useCallback(() => {\r\n    setIsFocused(false)\r\n\r\n    setIsFilled(!!inputRef.current?.value)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    })\r\n  }, [fieldName, registerField])\r\n\r\n  return (\r\n    <Container\r\n      style={containerStyle}\r\n      isErrored={!!error}\r\n      isFilled={isFilled}\r\n      isFocused={isFocused}\r\n    >\r\n      {Icon && <Icon size={20} title={placeholder} />}\r\n      <textarea\r\n        onFocus={handleMultilineInputFocus}\r\n        onBlur={handleMultilineInputBlur}\r\n        defaultValue={defaultValue}\r\n        placeholder={placeholder}\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"#ff5050\" title={error} size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MultilineInput\r\n","import styled from 'styled-components'\r\nimport { readableColor } from 'polished'\r\n\r\nimport lightTransparentLogo from '../../assets/images/logo-transparent.svg'\r\nimport darkTransparentLogo from '../../assets/images/logo-alt-transparent.svg'\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  background: ${props => {\r\n    return readableColor(props.theme.font) === '#fff'\r\n      ? `url(${lightTransparentLogo}) no-repeat 90% 85%`\r\n      : `url(${darkTransparentLogo}) no-repeat 90% 85%`\r\n  }};\r\n\r\n  > header {\r\n    height: 144px;\r\n    background: ${props => props.theme.primary};\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    div {\r\n      width: 100%;\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n\r\n      svg {\r\n        color: ${props => props.theme.font};\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Content = styled.main`\r\n  max-width: 1120px;\r\n\r\n  margin: 64px auto;\r\n  padding: 0px 32px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  form {\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h3 {\r\n      margin-bottom: 24px;\r\n    }\r\n  }\r\n`\r\n","import React, { useEffect, useCallback, useState, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form } from '@unform/web'\r\nimport { FormHandles } from '@unform/core'\r\nimport * as Yup from 'yup'\r\nimport crypto from 'crypto'\r\n\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport {\r\n  FaWeight,\r\n  FaTemperatureHigh,\r\n  FaAllergies,\r\n  FaHospitalAlt,\r\n} from 'react-icons/fa'\r\nimport { GiBodyHeight, GiWaterDrop, GiCycle } from 'react-icons/gi'\r\n\r\nimport api from '../../services/api'\r\nimport { useToast } from '../../hooks/toast'\r\nimport { useAuth } from '../../hooks/auth'\r\nimport getValidationErrors from '../../utils/getValidationErrors'\r\n\r\nimport Input from '../../components/Input'\r\nimport CheckBox from '../../components/CheckBox'\r\nimport Select from '../../components/Select'\r\nimport MultilineInput from '../../components/MultilineInput'\r\n\r\nimport { Container, Content } from './styles'\r\nimport Button from '../../components/Button'\r\n\r\ninterface IHospitals {\r\n  id: number\r\n  nome: string\r\n}\r\n\r\ninterface IMedicalRecordFormData {\r\n  weight: string\r\n  height: string\r\n  bloodPressure: number\r\n  bodyTemperature: number\r\n  allergy: string\r\n  lastCycle?: string\r\n  isPregnant?: boolean\r\n  hospitalId: string\r\n  referral: {\r\n    color: string\r\n    call: string\r\n  }\r\n}\r\n\r\ninterface IHandleSubmitMedicalRecordCallBack {\r\n  (data: Omit<IMedicalRecordFormData, 'referral'>): void\r\n}\r\n\r\ninterface IHandleFormValuesCallBack {\r\n  (data: Omit<IMedicalRecordFormData, 'referral'>): IMedicalRecordFormData\r\n}\r\n\r\nconst NewMedicalRecord: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null)\r\n\r\n  const [hospitals, setHospitals] = useState<IHospitals[]>([])\r\n\r\n  const { user, token } = useAuth()\r\n  const { addToast } = useToast()\r\n\r\n  const handleHospitals = useCallback(async () => {\r\n    const { data } = await api.get<IHospitals[]>('hospital')\r\n\r\n    setHospitals(oldValue => [...oldValue, ...data])\r\n  }, [])\r\n\r\n  const handleFormValues = useCallback<IHandleFormValuesCallBack>(data => {\r\n    const { bodyTemperature } = data\r\n\r\n    const color =\r\n      bodyTemperature <= 36.9\r\n        ? 'verde'\r\n        : bodyTemperature <= 37.9\r\n        ? 'amarelo'\r\n        : 'vermelho'\r\n\r\n        \r\n    return {\r\n      ...data,\r\n      referral: {\r\n        color,\r\n        call: crypto.randomBytes(8).toString(),\r\n      },\r\n    }\r\n  }, [])\r\n\r\n  const handleSubmit = useCallback<IHandleSubmitMedicalRecordCallBack>(\r\n    async data => {\r\n      formRef.current?.setErrors({})\r\n\r\n      const formData = handleFormValues(data)\r\n\r\n      try {\r\n        const schema = Yup.object().shape({\r\n          weight: Yup.string()\r\n            .matches(\r\n              /^[\\d.?!]+$/,\r\n              'Somente números válidos e/ou com o uso do pontos',\r\n            )\r\n            .required('Peso obrigatório'),\r\n\r\n          height: Yup.string()\r\n            .matches(\r\n              /^[\\d.?!]+$/,\r\n              'Somente números válidos e/ou com o uso do pontos',\r\n            )\r\n            .required('Altura obrigatório'),\r\n\r\n          bloodPressure: Yup.string()\r\n            .matches(\r\n              /^[\\d.?!]+$/,\r\n              'Somente números válidos e/ou com o uso do pontos',\r\n            )\r\n            .required('Pressão sanguínea obrigatória'),\r\n\r\n          bodyTemperature: Yup.string()\r\n            .matches(\r\n              /^[\\d.?!]+$/,\r\n              'Somente números válidos e/ou com o uso do pontos',\r\n            )\r\n            .required('Temperatura obrigatória'),\r\n\r\n          allergy: Yup.string(),\r\n\r\n          lastCycle: Yup.string().required(),\r\n\r\n          isPregnant: Yup.boolean(),\r\n\r\n          hospitalId: Yup.string().required(),\r\n\r\n          referral: Yup.object().shape({\r\n            color: Yup.string(),\r\n            call: Yup.string(),\r\n          }),\r\n        })\r\n\r\n        console.log(formData)\r\n\r\n        await schema.validate(formData, {\r\n          abortEarly: false,\r\n        })\r\n\r\n        await api.post('medical_records', formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n\r\n        addToast({\r\n          title: 'Ficha cadastrada com sucesso',\r\n          description:\r\n            'A sua ficha foi cadastrada no nosso sistema com sucesso!',\r\n          type: 'success',\r\n        })\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err)\r\n\r\n          formRef.current?.setErrors(errors)\r\n\r\n          return\r\n        }\r\n\r\n        addToast({\r\n          title: 'Erro ao cadastrar a sua ficha',\r\n          description:\r\n            'Ocorreu um erro ao cadastrar a sua ficha médica, tente novamente mais tarde.',\r\n          type: 'error',\r\n        })\r\n      }\r\n    },\r\n    [addToast, handleFormValues, token],\r\n  )\r\n\r\n  useEffect(() => {\r\n    handleHospitals()\r\n  }, [handleHospitals])\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div>\r\n          <Link to=\"/dashboard\">\r\n            <FiArrowLeft />\r\n          </Link>\r\n          <h1>Registrar nova ficha médica</h1>\r\n        </div>\r\n      </header>\r\n\r\n      <Content>\r\n        <Form ref={formRef} onSubmit={handleSubmit}>\r\n          <h1>Nova ficha médica</h1>\r\n          <h3>Registre a sua ficha médica</h3>\r\n\r\n          <Input name=\"weight\" icon={FaWeight} placeholder=\"Peso\" />\r\n\r\n          <Input name=\"height\" icon={GiBodyHeight} placeholder=\"Altura\" />\r\n\r\n          <Input\r\n            name=\"bloodPressure\"\r\n            icon={GiWaterDrop}\r\n            placeholder=\"Pressão sanguínea\"\r\n          />\r\n\r\n          <Input\r\n            name=\"bodyTemperature\"\r\n            icon={FaTemperatureHigh}\r\n            placeholder=\"Temperatura corporal\"\r\n          />\r\n\r\n          <MultilineInput\r\n            name=\"allergy\"\r\n            icon={FaAllergies}\r\n            placeholder=\"Alergia\"\r\n          />\r\n\r\n          {user.sex === 'F' && (\r\n            <>\r\n              <Input\r\n                name=\"lastCycle\"\r\n                icon={GiCycle}\r\n                placeholder=\"Último cíclo menstrual\"\r\n                type=\"date\"\r\n              />\r\n\r\n              <CheckBox name=\"isPregnant\" label=\"Estou grávida\" />\r\n            </>\r\n          )}\r\n\r\n          <Select\r\n            name=\"hospitalId\"\r\n            icon={FaHospitalAlt}\r\n            placeholder=\"Hospitais\"\r\n            options={hospitals.map(hospital => ({\r\n              label: hospital.nome,\r\n              value: hospital.id,\r\n            }))}\r\n          />\r\n\r\n          <Button type=\"submit\">Enviar</Button>\r\n        </Form>\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NewMedicalRecord\r\n","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nimport Route from './Route'\r\n\r\nimport SignIn from '../pages/SignIn'\r\nimport SignUp from '../pages/SignUp'\r\nimport ForgotPassword from '../pages/ForgotPassword'\r\nimport ResetPassword from '../pages/ResetPassword'\r\nimport Dashboard from '../pages/Dashboard'\r\nimport Profile from '../pages/Profile'\r\nimport HospitalsNearby from '../pages/HospitalsNearby'\r\nimport MedicalRecords from '../pages/MedicalRecords'\r\nimport NewMedicalRecord from '../pages/NewMedicalRecord'\r\n\r\nconst Routes: React.FC = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={SignIn} />\r\n    <Route path=\"/signup\" component={SignUp} />\r\n    <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n    <Route path=\"/reset-password\" component={ResetPassword} />\r\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\r\n    <Route path=\"/profile\" component={Profile} isPrivate />\r\n    <Route path=\"/hospitals-nearby\" component={HospitalsNearby} isPrivate />\r\n    <Route path=\"/medical-records\" component={MedicalRecords} isPrivate />\r\n    <Route path=\"/new-medical-record\" component={NewMedicalRecord} isPrivate />\r\n  </Switch>\r\n)\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { LoadScript } from '@react-google-maps/api'\r\n\r\nimport { AuthProvider } from './auth'\r\nimport { ThemeProvider } from './theme'\r\nimport { ToastProvider } from './toast'\r\n\r\nconst AppProvider: React.FC = ({ children }) => (\r\n  <LoadScript\r\n    googleMapsApiKey={process.env.REACT_APP_GOOGLE_API_KEY}\r\n    libraries={['visualization', 'places']}\r\n  >\r\n    <ThemeProvider>\r\n      <AuthProvider>\r\n        <ToastProvider>{children}</ToastProvider>\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  </LoadScript>\r\n)\r\n\r\nexport default AppProvider\r\n","import React from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport Routes from './routes'\r\n\r\nimport AppProvider from './hooks'\r\n\r\nconst App: React.FC = () => (\r\n  <>\r\n    <Router>\r\n      <AppProvider>\r\n        <Routes />\r\n      </AppProvider>\r\n    </Router>\r\n  </>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","module.exports = __webpack_public_path__ + \"static/media/medicine.cb3b456c.svg\";"],"sourceRoot":""}